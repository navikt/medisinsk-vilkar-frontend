name: Deploy Docker image
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.prettierrc'
    branches:
      - main
env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/opptjening-microfrontend-poc
  CLUSTER: dev-gcp
  NAMESPACE: default
jobs:
  deploy-docker-image:
    name: Deploy Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Sette opp Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Installere dependencies
        run: npm install
      - name: Sette versjon
        run: |
          echo "::set-env name=VERSION::$(npm run version --silent)"
      - name: Sjekke om tag fins fra før
        run: |
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists, aborting"
            exit 1
          fi
      - name: Sjekk om bygg finnes
        run: |
          if [ ! -d "build/$VERSION" ]; then
            echo "Build folder with name $VERSION does not exist, aborting"
            exit 1
          fi
      - name: Sette miljøvariabler
        run: |
          echo "::set-env name=IMAGE::$IMAGE_BASE:$VERSION"
          echo "::set-env name=CSS_HASH::$(shasum -b -a 384 build/$VERSION/styles.css | awk '{ print $1 }' | xxd -r -p | base64)"
          echo "::set-env name=JS_HASH::$(shasum -b -a 384 build/$VERSION/app.js | awk '{ print $1 }' | xxd -r -p | base64)"
      - name: Bygg og laste opp docker-image
        run: |
          docker build --tag ${IMAGE} .
          echo "$GITHUB_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push ${IMAGE}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator.yml
          VARS: nais/dev-gcp.json
      - name: Set changelog
        # (Escape newlines see https://github.com/actions/create-release/issues/25)
        run: |
          text="$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s")"
          text="${text//$'%'/%25}"
          text="${text//$'\n'/%0A}"
          text="${text//$'\r'/%0D}"
          echo "::set-env name=CHANGELOG::$text"
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: |
            For JS, add this to your app:
            ```
            <script
              type="text/javascript"
              text="https://opptjening-microfrontend-poc.dev.adeo.no/${{ env.VERSION }}/app.js"
              integrity="${{ env.JS_HASH }}"
            />
            ```

            For CSS, add this to the `<head>` of your app:
            ```<link
                rel="stylesheet"
                text="https://opptjening-microfrontend-poc.dev.adeo.no/${{ env.VERSION }}/styles.css"
                integrity="${{ env.CSS_HASH }}"
              >
            ```

            *Changes in this Release*
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
